/*
use elena font family for paragraph text
 */
/* to reset all properties so every browser render same  */
html {
  font-size: 62.5%;
  /*  10px is what % of 16 */
}

*, *::after, *::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*(inherit from body) so that users can change box-sizing values from here */
}

body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  /* vertical height between lines 1.6 times default */
  color: #777;
  padding: 3rem;
  /* have space with ends */
  box-sizing: border-box;
}

.header {
  height: 95vh;
  /* always keep 95% viewport height */
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.801), rgba(40, 180, 133, 0.801)), url(./img/hero.jpg);
  /* show two photo lineargradient and url */
  background-size: cover;
  /* take full size */
  background-position: top;
  /* on crop top is zoomed */
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* makes polygon shape of view here 4 vertices */
  position: relative;
  /* to use position:absloute on logo-box */
}

.header__logo-box {
  position: absolute;
  /* position from parent start */
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
  /* browser sets width automatically if not provided, same for height */
}

/* 
logo-box:hover .logo{
   means add css to logo when logo-box is hovered
}
*/
.header__text-box {
  position: absolute;
  /* to make text-box in centre */
  left: 50%;
  top: 40%;
  transform: translate(-50%, -50%);
  /* position changes w.r.t starting of block, so to make it relative to centre of block we did translate of 50% */
  text-align: center;
}

.heading-primary {
  text-transform: uppercase;
  color: #fff;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /*  when backpart comes in front(by rotating or animation) then hide it */
}

.heading-primary__main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  padding-left: 2rem;
  /* in letter-spacing 35 added to last letter so text is not in centre so added padding*/
  -webkit-animation-name: moveInLeft;
          animation-name: moveInLeft;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
  /*
  animation-delay:3s;                 do after 3s
  animation-iteration-count: 3;       3 times call 
   */
}

.heading-primary__sub {
  display: block;
  font: size 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  /* margin-right:-16px; */
  margin-bottom: 6rem;
  -webkit-animation-name: moveInRight;
          animation-name: moveInRight;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-timing-function: ease-out;
          animation-timing-function: ease-out;
}

/*  */
@-webkit-keyframes moveInLeft {
  /* create your own animations */
  0% {
    opacity: 0;
    /* initially not visible */
    transform: translateX(-10rem);
    /* opacity and transform brings most of animation */
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
    /* original position at end */
  }
}
@keyframes moveInLeft {
  /* create your own animations */
  0% {
    opacity: 0;
    /* initially not visible */
    transform: translateX(-10rem);
    /* opacity and transform brings most of animation */
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
    /* original position at end */
  }
}
@-webkit-keyframes moveInRight {
  /* create your own animations */
  0% {
    opacity: 0;
    /* initially not visible */
    transform: translateX(10rem);
    /* opacity and transform brings most of animation */
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
    /* original position at end */
  }
}
@keyframes moveInRight {
  /* create your own animations */
  0% {
    opacity: 0;
    /* initially not visible */
    transform: translateX(10rem);
    /* opacity and transform brings most of animation */
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
    /* original position at end */
  }
}
@-webkit-keyframes fadeDown {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes fadeDown {
  0% {
    opacity: 0;
    transform: translateY(10rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
.btn:visited, .btn:link {
  /* we have written .btn:link because it selects those tags with "href" and those are "not-visited","hovered","active" which-
  allows us to set different properties for hover, visited, and active as we did below   */
  text-decoration: none;
  text-transform: uppercase;
  display: inline-block;
  font-size: 1.6rem;
  border-radius: 10rem;
  padding: 1.5rem 4rem;
  transition: all 0.2s;
  position: relative;
  /* to use absolute position for pseudo btn below */
}

.btn:hover {
  transform: translateY(-3px);
  /* for lift up effect */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* values are- xlength ylength blur-length color(add opacity less eg-0.2)  */
}

.btn:active {
  /* code of active is put after hover as we can click only after it is hovered */
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--animated {
  -webkit-animation-fill-mode: backwards;
          animation-fill-mode: backwards;
  /* apply 0% animation property initially */
  -webkit-animation: fadeDown 0.8s ease-out;
          animation: fadeDown 0.8s ease-out;
}

.btn::after {
  /* we are keeping a big button behind btn which fades on hover */
  content: "";
  /* we need to specify content of element */
  display: inline-block;
  /* now we are adding style to look like original button */
  width: 100%;
  height: 100%;
  border-radius: 10rem;
  position: absolute;
  /* to hide button behind btn keep it at same place of btn, add z-index -1 */
  left: 0;
  top: 0;
  z-index: -1;
  transition: all 0.4s;
}  

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  /* when btn is hover add style to pseudo btn */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}/*# sourceMappingURL=style.css.map */